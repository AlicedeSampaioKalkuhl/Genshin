)
callooked <- callook %>%
drop_na(interval_mid_ma)
cals <- palaeorotate(occdf = callook, age = "interval_mid_ma", method = "point", model = "GOLONKA")
View(callooked)
cals %>% write.csv("C:/Users/alice/Documents/GitHub/Filovirus_EVE/pbdb_calculation.csv")
world <- ne_countries(scale = "medium", returnclass = "sf")
ggplot(world)+
geom_sf()+
geom_point(data=cals, aes(x=lng,y=lat,shape=23,stroke=1.2,colour=as.numeric(min_ma)))+
scale_shape_identity()+
scale_colour_viridis_c(option="turbo")+
xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(angle=90,hjust=1))
library(palaeoverse)
library(tidyverse)
library(sf) # This is for maps
library(rnaturalearth) # This pulls some data
library(rnaturalearthdata) # This pulls some data
library(rgeos) # for maps
library(terra)# for maps
library(rpaleoclim)# for maps
library(rgplates)# for maps
library(purrrlyr) # for combining data sets
library(deeptime) # for plotting temporal ranges
library(janitor) # for combining data sets
library(viridis) # for colours
library(magick) # to export gifs
citation(palaeoverse)
citation("palaeoverse")
citation()
citation(sf)
citation("sf")
citation("rnaturalearth ")
citation("rnaturalearth")
citation("rnaturaleathdata ")
citation("rnaturaleathdata")
citation("rnaturalearthdata")
citation("rgeos ")
citation("rgeos")
citation("terra")
citation("rpaleoclim ")
citation("rpaleoclim")
citation("rgplates")
citation("purrrlyr")
citation("deeptime")
citation("viridis")
citation("magick")
library(installr)
updateR())
updateR()
library(tidyverse)
library(purrr)
setwd("C:/User/alice/Documents/GitHub/Genshin")
setwd("C:/Users/alice/Documents/GitHub/Genshin")
level_up_materials <- read.csv("character_materials.csv") %>%
separate_rows(character,sep=' & ')
local_specialties <- read.csv("local_specialties.csv") %>% separate_rows(character,sep=' & ')
all_characters <- read.csv("all_characters.csv")
characters <- purrr::reduce(list(all_characters,level_up_materials,local_specialties), dplyr::left_join, by = "character") %>% mutate(ascension = case_when(
element == "Traveler" ~ "Brilliant Diamond",
element == "Pyro" ~ "Agnidus Agate",
element == "Hydro" ~ "Varunada Lazurite",
element == "Dendro" ~ "Nagadus Emerald",
element == "Electro" ~ "Vajrada Amethyst",
element == "Anemo" ~ "Vayuda Turquoise",
element == "Cryo" ~ "Shivada Jade",
element == "Geo" ~ "Prithiva Topaz"))
my_characters <- read.csv("my_characters.csv", header = T,row.names=NULL)
# names(my_characters) <- c("pulls","character","style") run this, if you named the variables different in your table
farming <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0 & style != "TBD" & style != "Unused") # let's only farm for characters you have and want to be using
wishlist <- left_join(my_characters,all_characters,by="character") %>% filter(pulls==0)
my_characters %>% select(character,boss)
colnames(my_characters)
colnames(characters)
head(characters)
farming %>% group_by(source,material,source_type) %>% tally()
farming %>% group_by(source,material,source_type) %>% tally() %>% arrange(-n)
farming %>% group_by(source,material) %>% tally() %>% arrange(-n)
farming %>%
group_by(source,material) %>%
mutate(tally_score=n())
farming_bosses <- farming %>%
group_by(source,material) %>%
mutate(boss_score=n()) %>%
geoup_by(ascension) %>%
mutate(boss_score_2=n())
farming_bosses <- farming %>%
group_by(source,material) %>%
mutate(boss_score=n()) %>%
group_by(ascension) %>%
mutate(boss_score_2=n())
farming_bosses
View(farming_bosses)
colnames(farming)
characters %>% head()
loca_farming <- farming_bosses %>%
select(character,local_specialty,location) %>%
distinct() %>%
group_by(local_specialty) %>%
mutate(local_score=n())
farming_bosss %>% colnames()
farming_bosses %>% colnames()
level_up_materials <- read.csv("character_materials.csv") %>%
separate_rows(character,sep=' & ')
local_specialties <- read.csv("local_specialties.csv") %>% separate_rows(character,sep=' & ')
all_characters <- read.csv("all_characters.csv") %>% group_by(element) %>% mutate(element_score=n()) %>% ungroup()
characters <- purrr::reduce(list(all_characters,level_up_materials,local_specialties), dplyr::left_join, by = "character") %>% mutate(ascension = case_when(
element == "Traveler" ~ "Brilliant Diamond",
element == "Pyro" ~ "Agnidus Agate",
element == "Hydro" ~ "Varunada Lazurite",
element == "Dendro" ~ "Nagadus Emerald",
element == "Electro" ~ "Vajrada Amethyst",
element == "Anemo" ~ "Vayuda Turquoise",
element == "Cryo" ~ "Shivada Jade",
element == "Geo" ~ "Prithiva Topaz"))
my_characters <- read.csv("my_characters.csv", header = T,row.names=NULL)
# names(my_characters) <- c("pulls","character","style") run this, if you named the variables different in your table
farming <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0 & style != "TBD" & style != "Unused") # let's only farm for characters you have and want to be using
wishlist <- left_join(my_characters,all_characters,by="character") %>% filter(pulls==0)
farming_bosses <- farming %>%
group_by(source,material) %>%
mutate(boss_score=n())
local_farming <- farming_bosses %>%
select(character,local_specialty,location) %>%
distinct() %>%
group_by(local_specialty) %>%
mutate(local_score=n())
farming_bosses <- farming %>%
group_by(source,material) %>%
mutate(boss_score=n()) %>%
ungroup()
local_farming <- farming_bosses %>%
select(character,local_specialty,location) %>%
distinct() %>%
group_by(local_specialty) %>%
mutate(local_score=n())
local_farming <- farming_bosses %>%
select(character,local_specialty,location) %>%
distinct() %>%
group_by(local_specialty) %>%
mutate(local_score=n()) %>%
ungroup()
local_farming %>% head()
farming_sorted <- left_join(local_farming,farming_boss)
farming_sorted <- left_join(local_farming,farming_bosses)
farming_sorted <- left_join(local_farming,farming_bosses,by=c(character,local_speciality,location))
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_speciality","location"))
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location"))
farming_sorted
my_characters <- read.csv("my_characters.csv", header = T,row.names=NULL) %>%
mutate(faves_priority=case_when(style == "Unused" ~ 0,
style == "TBD" ~ 1,
style == "Exploration" ~ 2,
style == "Finisher" ~ 3,
style == "Healer" ~ 4,
style == "Support" ~ 5,
style == "Shielder" ~ 6,
style == "DPS" ~ 7))
# names(my_characters) <- c("pulls","character","style") run this, if you named the variables different in your table
farming <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0 & style != "TBD" & style != "Unused") # let's only farm for characters you have and want to be using
wishlist <- left_join(my_characters,all_characters,by="character") %>% filter(pulls==0)
wishlist
wishlist <- left_join(my_characters,all_characters,by="character") %>% filter(pulls==0) %>% pull(character)
wishlist
farming_bosses <- farming %>%
group_by(source,material) %>%
mutate(boss_score=n()) %>%
ungroup()
local_farming <- farming_bosses %>%
select(character,local_specialty,location) %>%
distinct() %>%
group_by(local_specialty) %>%
mutate(local_score=n()) %>%
ungroup()
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=)
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority)
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority)
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority) %>%
select(character,local_specialy,location,source,material,farming_priority)
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority) %>%
select(character,local_specialty,location,source,material,farming_priority)
farming_sorted
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority) %>%
select(character,local_specialty,location,source,material,farming_priority) %>%
group_by(character) %>%
mutate(boss = paste(source,collapse = " & "),
boss_material = paste(material,collapse = " & "))
farming_sorted
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority) %>%
select(character,local_specialty,location,source,material,farming_priority) %>%
group_by(character) %>%
mutate(boss = paste(source,collapse = " & "),
boss_material = paste(material,collapse = " & ")) %>%
select(-c(source,material))
farming_sorted
colnames(farming_sorted)
my_freeze_team
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(purrr)
libary(rmarkdown)
library(tidyverse)
library(purrr)
library(rmarkdown)
sewtd('C:/Users/alice/Documents/GitHub/Genshin')
setwd('C:/Users/alice/Documents/GitHub/Genshin')
level_up_materials <- read.csv("character_materials.csv") %>%
separate_rows(character,sep=' & ')
library(tidyverse)
library(purrr)
library(rmarkdown)
library(gtools)
level_up_materials <- read.csv("character_materials.csv") %>%
separate_rows(character,sep=' & ')
local_specialties <- read.csv("local_specialties.csv") %>% separate_rows(character,sep=' & ')
all_characters <- read.csv("all_characters.csv") %>% group_by(element) %>% mutate(element_score=n()) %>% ungroup()
characters <- purrr::reduce(list(all_characters,level_up_materials,local_specialties), dplyr::left_join, by = "character") %>% mutate(ascension = case_when(
element == "Traveler" ~ "Brilliant Diamond",
element == "Pyro" ~ "Agnidus Agate",
element == "Hydro" ~ "Varunada Lazurite",
element == "Dendro" ~ "Nagadus Emerald",
element == "Electro" ~ "Vajrada Amethyst",
element == "Anemo" ~ "Vayuda Turquoise",
element == "Cryo" ~ "Shivada Jade",
element == "Geo" ~ "Prithiva Topaz"))
my_characters <- read.csv("my_characters.csv", header = T,row.names=NULL) %>%
mutate(faves_priority=case_when(style == "Unused" ~ 0,
style == "TBD" ~ 1,
style == "Exploration" ~ 2,
style == "Finisher" ~ 3,
style == "Healer" ~ 4,
style == "Support" ~ 5,
style == "Shielder" ~ 6,
style == "DPS" ~ 7,
style == "Main" ~ 8))
# names(my_characters) <- c("pulls","character","style") run this, if you named the variables different in your table
farming <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0 & style != "TBD" & style != "Unused") # let's only farm for characters you have and want to be using
wishlist <- left_join(my_characters,all_characters,by="character") %>% filter(pulls==0) %>% pull(character)
wishlist
wishlist <- left_join(my_characters,all_characters,by="character") %>% filter(pulls==0) %>% pull(character)
farming <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0 & style != "TBD" & style != "Unused")
farming <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0 | style != "TBD" | style != "Unused")
farming <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0)
View(my_characters)
my_characters <- read.csv("my_characters.csv", header = T) %>%
mutate(faves_priority=case_when(style == "Unused" ~ 0,
style == "TBD" ~ 1,
style == "Exploration" ~ 2,
style == "Finisher" ~ 3,
style == "Healer" ~ 4,
style == "Support" ~ 5,
style == "Shielder" ~ 6,
style == "DPS" ~ 7,
style == "Main" ~ 8))
my_characters <- read.csv("my_characters.csv", header = T)
my_characters <- read.csv("my_characters.csv", header = T,row.names = F)
my_characters <- read.csv("my_characters.csv", header = T,row.names = NULL)
View(characters)
View(my_characters)
View(local_specialties)
View(my_characters)
my_characters <- read.csv("my_characters.csv", header = T,row.names = F) %>%
mutate(faves_priority=case_when(style == "Unused" ~ 0,
style == "TBD" ~ 1,
style == "Exploration" ~ 2,
style == "Finisher" ~ 3,
style == "Healer" ~ 4,
style == "Support" ~ 5,
style == "Shielder" ~ 6,
style == "DPS" ~ 7,
style == "Main" ~ 8))
my_characters <- read.csv("my_characters.csv", header = T,row.names = NULL) %>%
mutate(faves_priority=case_when(style == "Unused" ~ 0,
style == "TBD" ~ 1,
style == "Exploration" ~ 2,
style == "Finisher" ~ 3,
style == "Healer" ~ 4,
style == "Support" ~ 5,
style == "Shielder" ~ 6,
style == "DPS" ~ 7,
style == "Main" ~ 8))
View(my_characters)
knitr::opts_knit$set(root.dir = 'C:/Users/alice/Documents/GitHub/Genshin')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(purrr)
library(rmarkdown)
library(gtools)
my_characters <- read.csv("my_characters.csv", header = T,row.names = NULL) %>%
mutate(faves_priority=case_when(style == "Unused" ~ 0,
style == "TBD" ~ 1,
style == "Exploration" ~ 2,
style == "Finisher" ~ 3,
style == "Healer" ~ 4,
style == "Support" ~ 5,
style == "Shielder" ~ 6,
style == "DPS" ~ 7,
style == "Main" ~ 8))
# names(my_characters) <- c("pulls","character","style") run this, if you named the variables different in your table
farming <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0 | style != "TBD" | style != "Unused") # let's only farm for characters you have and want to be using
# names(my_characters) <- c("pulls","character","style") run this, if you named the variables different in your table
farming <- merge(my_characters,characters,on="character")# let's only farm for characters you have and want to be using
farming <- left_join(my_characters,characters,on="character") %>%
filter(pulls > 0 | style != "TBD" | style != "Unused")
my_characters <- read.csv("my_characters.csv", header = T,row.names = NULL) %>%
mutate(faves_priority=case_when(style == "Unused" ~ 0,
style == "TBD" ~ 1,
style == "Exploration" ~ 2,
style == "Finisher" ~ 3,
style == "Healer" ~ 4,
style == "Support" ~ 5,
style == "Shielder" ~ 6,
style == "DPS" ~ 7,
style == "Main" ~ 8))
farming <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0 | style != "TBD" | style != "Unused")
View(farming)
# names(my_characters) <- c("pulls","character","style") run this, if you named the variables different in your table
farming <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0 & style != "TBD" & style != "Unused") # let's only farm for characters you have and want to be using
View(farming)
wishlist <- left_join(my_characters,all_characters,by="character") %>% filter(pulls==0) %>% pull(character)
wishlist
farming_bosses <- farming %>%
group_by(source,material) %>%
mutate(boss_score=n()) %>%
ungroup()
local_farming <- farming_bosses %>%
select(character,local_specialty,location) %>%
distinct() %>%
group_by(local_specialty) %>%
mutate(local_score=n()) %>%
ungroup()
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority) %>%
select(character,local_specialty,location,source,material,farming_priority) %>%
group_by(character) %>%
mutate(boss = paste(source,collapse = " & "),
boss_material = paste(material,collapse = " & ")) %>%
select(-c(source,material)) %>%
relocate(farming_priority, .after=character)
paged_table(farming_sorted)
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority) %>%
select(character,local_specialty,location,source,material,farming_priority) %>%
group_by(character) %>%
mutate(boss = paste(source,collapse = " & "),
boss_material = paste(material,collapse = " & ")) %>%
select(-c(source,material)) %>%
relocate(farming_priority, .after=character) %>% arrange(farming_priority)
paged_table(farming_sorted)
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority) %>%
select(character,local_specialty,location,source,material,farming_priority) %>%
group_by(character) %>%
mutate(boss = paste(source,collapse = " & "),
boss_material = paste(material,collapse = " & ")) %>%
select(-c(source,material)) %>%
relocate(farming_priority, .after=character) %>% arrange(-farming_priority)
paged_table(farming_sorted)
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority) %>%
select(character,local_specialty,location,source,material,farming_priority) %>%
group_by(character) %>%
mutate(boss = paste(source,collapse = " & "),
boss_material = paste(material,collapse = " & ")) %>%
select(-c(source,material)) %>%
relocate(farming_priority, .after=character) %>% arrange(-farming_priority) %>%
select(-farming_priority) %>% distinct()
paged_table(farming_sorted)
team_df <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0) %>%
group_by(character,style,element,weapon) %>% tally() %>% select(-n)
teams_characters <- combinations(length(team_df$character),4,team_df$character,repeats.allowed = FALSE) %>% as.data.frame()
teams <- list()
for (i in 1:nrow(teams_characters)){
team <- as.vector(teams_characters[i,])
this_team <- team_df %>%
filter(character %in% team)
teams[[i]] <- this_team
}
combat_teams <- teams %>% discard(.,~ "Exploration" %in% .x$style | "Expedition" %in% .x$style | "Unused" %in% .x$style)
combat_teams <- combat_teams %>% discard(., ~ "Alhaitham" %in% .x$character & !("Kaveh" %in% .x$character) & !("Hydro" %in% .x$element) & !("Electro" %in% .x$element))
combat_teams <- combat_teams %>% discard(., ~ "Charlotte" %in% .x$character & !("Fontaine" %in% .x$region))
combat_teams <- combat_teams %>% discard(., ~ "Chiori" %in% .x$character & length(grep("Anemo",.x$element)) < 3)
combat_teams <- combat_teams %>% discard(., ~ "Faruzan" %in% .x$character & length(grep("Anemo",.x$element)) < 3)
combat_teams <- combat_teams %>% discard(., ~ "Gaming" %in% .x$character & !("Anemo" %in% .x$element))
combat_teams <- combat_teams %>% discard(., ~ "Kaveh" %in% .x$character & !("Alhaitham" %in% .x$character) & !("Hydro" %in% .x$element))
combat_teams <- combat_teams %>% discard(., ~ "Layla" %in% .x$character & "Dendro" %in% .x$element | "Layla" %in% .x$character &  "Electro" %in% .x$element | "Layla" %in% .x$character & "Geo" %in% .x$element | "Layla" %in% .x$character & "Anemo" %in% .x$element)
combat_teams <- combat_teams %>% discard(., ~ "Lynette" %in% .x$character & length(grep("Anemo",.x$element)) > 2 | "Lynette" %in% .x$character & length(grep("Geo",.x$element)) > 2 | "Lynette" %in% .x$character & length(grep("Anemo",.x$element))+ length(grep("Geo",.x$element)) > 2)
combat_teams <- combat_teams %>% discard(., ~ "Shenhe" %in% .x$character & length(grep("Cryo",.x$element))<2)
combat_teams <- combat_teams %>% discard(., ~ "Sayu" %in% .x$character &  length(grep("Anemo",.x$element))>1 | "Sayu" %in% .x$character &  length(grep("Cryo",.x$element))>1 | "Sayu" %in% .x$character &  length(grep("Dendro",.x$element))>1 |  "Sayu" %in% .x$character &  length(grep("Electro",.x$element))>1 | "Sayu" %in% .x$character &  length(grep("Geo",.x$element))>1 | "Sayu" %in% .x$character &  length(grep("Hydro",.x$element))>1 | "Sayu" %in% .x$character &  length(grep("Pyro",.x$element))>1)
colnames(team_df)
team_df <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0) %>%
group_by(character,style,element,weapon,region) %>% tally() %>% select(-n)
teams_characters <- combinations(length(team_df$character),4,team_df$character,repeats.allowed = FALSE) %>% as.data.frame()
teams <- list()
for (i in 1:nrow(teams_characters)){
team <- as.vector(teams_characters[i,])
this_team <- team_df %>%
filter(character %in% team)
teams[[i]] <- this_team
}
combat_teams <- teams %>% discard(.,~ "Exploration" %in% .x$style | "Expedition" %in% .x$style | "Unused" %in% .x$style)
combat_teams <- combat_teams %>% discard(., ~ "Alhaitham" %in% .x$character & !("Kaveh" %in% .x$character) & !("Hydro" %in% .x$element) & !("Electro" %in% .x$element))
combat_teams <- combat_teams %>% discard(., ~ "Charlotte" %in% .x$character & !("Fontaine" %in% .x$region))
combat_teams <- combat_teams %>% discard(., ~ "Chiori" %in% .x$character & length(grep("Anemo",.x$element)) < 3)
combat_teams <- combat_teams %>% discard(., ~ "Faruzan" %in% .x$character & length(grep("Anemo",.x$element)) < 3)
combat_teams <- combat_teams %>% discard(., ~ "Gaming" %in% .x$character & !("Anemo" %in% .x$element))
combat_teams <- combat_teams %>% discard(., ~ "Kaveh" %in% .x$character & !("Alhaitham" %in% .x$character) & !("Hydro" %in% .x$element))
combat_teams <- combat_teams %>% discard(., ~ "Layla" %in% .x$character & "Dendro" %in% .x$element | "Layla" %in% .x$character &  "Electro" %in% .x$element | "Layla" %in% .x$character & "Geo" %in% .x$element | "Layla" %in% .x$character & "Anemo" %in% .x$element)
combat_teams <- combat_teams %>% discard(., ~ "Lynney" %in% .x$character & length(grep("Pyro",.x$element)) < 3 & !("Healer" %in% .x$style))
combat_teams <- combat_teams %>% discard(., ~ "Lynette" %in% .x$character & length(grep("Anemo",.x$element)) > 2 | "Lynette" %in% .x$character & length(grep("Geo",.x$element)) > 2 | "Lynette" %in% .x$character & length(grep("Anemo",.x$element))+ length(grep("Geo",.x$element)) > 2)
combat_teams <- combat_teams %>% discard(., ~ "Nilou" %in%  .x$character & "Electro" %in% .x$element | "Nilou" %in%  .x$character & "Anemo" %in% .x$element | "Nilou" %in%  .x$character & "Geo" %in% .x$element | "Nilou" %in%  .x$character & "Pyro" %in% .x$element | ~ "Nilou" %in%  .x$character & "Cryo" %in% .x$element | ~ "Nilou" %in%  .x$character & "Electro" %in% .x$element & length(grep("Dendro",.x$element)) < 1)
combat_teams <- teams %>% discard(.,~ "Exploration" %in% .x$style | "Expedition" %in% .x$style | "Unused" %in% .x$style)
combat_teams <- combat_teams %>% discard(., ~ "Alhaitham" %in% .x$character & !("Kaveh" %in% .x$character) & !("Hydro" %in% .x$element) & !("Electro" %in% .x$element))
combat_teams <- combat_teams %>% discard(., ~ "Charlotte" %in% .x$character & !("Fontaine" %in% .x$region))
combat_teams <- combat_teams %>% discard(., ~ "Chiori" %in% .x$character & length(grep("Anemo",.x$element)) < 3)
combat_teams <- combat_teams %>% discard(., ~ "Faruzan" %in% .x$character & length(grep("Anemo",.x$element)) < 3)
combat_teams <- combat_teams %>% discard(., ~ "Gaming" %in% .x$character & !("Anemo" %in% .x$element))
combat_teams <- combat_teams %>% discard(., ~ "Kaveh" %in% .x$character & !("Alhaitham" %in% .x$character) & !("Hydro" %in% .x$element))
combat_teams <- combat_teams %>% discard(., ~ "Layla" %in% .x$character & "Dendro" %in% .x$element | "Layla" %in% .x$character &  "Electro" %in% .x$element | "Layla" %in% .x$character & "Geo" %in% .x$element | "Layla" %in% .x$character & "Anemo" %in% .x$element)
combat_teams <- combat_teams %>% discard(., ~ "Lynney" %in% .x$character & length(grep("Pyro",.x$element)) < 3 & !("Healer" %in% .x$style))
combat_teams <- combat_teams %>% discard(., ~ "Lynette" %in% .x$character & length(grep("Anemo",.x$element)) > 2 | "Lynette" %in% .x$character & length(grep("Geo",.x$element)) > 2 | "Lynette" %in% .x$character & length(grep("Anemo",.x$element))+ length(grep("Geo",.x$element)) > 2)
combat_teams <- combat_teams %>% discard(., ~ "Nilou" %in%  .x$character & "Electro" %in% .x$element | "Nilou" %in%  .x$character & "Anemo" %in% .x$element | "Nilou" %in%  .x$character & "Geo" %in% .x$element | "Nilou" %in%  .x$character & "Pyro" %in% .x$element | "Nilou" %in%  .x$character & "Cryo" %in% .x$element | "Nilou" %in%  .x$character & "Electro" %in% .x$element & length(grep("Dendro",.x$element)) < 1)
combat_teams <- combat_teams %>% discard(., ~ "Shenhe" %in% .x$character & length(grep("Cryo",.x$element))<2)
combat_teams <- combat_teams %>% discard(., ~ "Sangonomiya Kokomi" %in% .x$character & "Dendro" %in% .x$element)
combat_teams <- combat_teams %>% discard(., ~ "Sayu" %in% .x$character &  length(grep("Anemo",.x$element))>1 | "Sayu" %in% .x$character &  length(grep("Cryo",.x$element))>1 | "Sayu" %in% .x$character &  length(grep("Dendro",.x$element))>1 |  "Sayu" %in% .x$character &  length(grep("Electro",.x$element))>1 | "Sayu" %in% .x$character &  length(grep("Geo",.x$element))>1 | "Sayu" %in% .x$character &  length(grep("Hydro",.x$element))>1 | "Sayu" %in% .x$character &  length(grep("Pyro",.x$element))>1)
combat_teans <- combat_teams <- combat_teams %>% discard(., ~ "Sucrose" %in% .x$character & length(grep("Anemo",.x$element)) > 2 | "Sucrose" %in% .x$character & length(grep("Geo",.x$element)) > 2 | "Lynette" %in% .x$character & length(grep("Anemo",.x$element)) + length(grep("Geo",.x$element)) > 2)
combat_teams <- combat_teams <- combat_teams %>% discard(., ~ "Sucrose" %in% .x$character & length(grep("Anemo",.x$element)) > 2 | "Sucrose" %in% .x$character & length(grep("Geo",.x$element)) > 2 | "Lynette" %in% .x$character & length(grep("Anemo",.x$element)) + length(grep("Geo",.x$element)) > 2)
freeze_teams <- teams %>% discard(., ~ "Pyro" %in% .x$element | "Claymore" %in% .x$weapon) %>%
keep(., ~ "Cryo" %in% .x$element ==TRUE & "Hydro" %in% .x$element == TRUE) #
freeze_teams <- combat_teams %>% discard(., ~ "Pyro" %in% .x$element | "Claymore" %in% .x$weapon) %>%
keep(., ~ "Cryo" %in% .x$element ==TRUE & "Hydro" %in% .x$element == TRUE)
my_freeze_team <- discard(freeze_teams, ~ "Unused" %in% .x$style)
walk(my_freeze_team, ~DT::datatable(.x) %>%
htmltools::tagList() %>%
print())
hyperbloom_teams <- keep(teams, ~ "Dendro" %in% .x$element & "Hydro" %in% .x$element & "Electro" %in% .x$element)
my_hyperbloom_team <- discard(hyperbloom_teams, ~ "Unused" %in% .x$style | "Exploration" %in% .x$style)
walk(my_hyperbloom_team, ~DT::datatable(.x) %>%
htmltools::tagList() %>%
print())
exploration_teams <- keep(teams, ~ "Pyro" %in% .x$element & "Bow" %in% .x$weapon)
Mondstadt <- keep(exploration_teams, ~ "Mondstadt" %in% .x$region & "Anemo" %in% .x$element & "Electro" %in% .x$element)
my_Mondstadt_exploration <- discard(Mondstadt, ~ "Unused" %in% .x$style)
walk(my_Mondstadt_exploration, ~DT::datatable(.x) %>%
htmltools::tagList() %>%
print())
Liyue <- keep(exploration_teams, ~ "Liyue" %in% .x$region & "Geo" %in% .x$element)
my_Liyue_exploration <- discard(Liyue, ~ "Unused" %in% .x$style)
Inazuma <- keep(exploration_teams, ~ "Inazuma" %in% .x$region & "Electro" %in% .x$element)
my_Inazuma_exploration <- discard(Inazuma, ~ "Unused" %in% .x$style)
walk(my_Inazuma_exploration, ~DT::datatable(.x) %>%
htmltools::tagList() %>%
print())
Sumeru_forest <- keep(exploration_teams, ~ "Sumeru" %in% .x$region & "Dendro" %in% .x$element & "Electro" %in% .x$element)
my_Sumeru_forest_exploration <- discard(Sumeru_forest, ~ "Unused" %in% .x$style)
Sumeru_desert <- keep(exploration_teams, ~ "Sumeru" %in% .x$region & "Dendro" %in% .x$element & "Anemo" %in% .x$element)
my_Sumeru_desert_exploration <- discard(Sumeru_desert, ~ "Unused" %in% .x$style)
Fontaine <- keep(exploration_teams, ~ "Fontaine" %in% .x$region & "Hydro" %in% .x$element)
artifacts <- read.csv("artifacts.csv")
artifact_farming <- my_characters %>%
separate_rows(artifacts,sep =" & ") %>%
left_join(.,artifacts,on="artifacts") %>%
group_by(artifact_location) %>%
mutate(artifact_priority=n()) %>%
ungroup() %>% select(character,artifacts,artifact_location,artifact_region,artifact_priority) %>% distinct()
artifact_farming <- my_characters %>%
separate_rows(artifacts,sep =" & ") %>%
left_join(.,artifacts,on="artifacts") %>%
group_by(artifact_location) %>%
mutate(artifact_priority=n()) %>%
ungroup() %>% select(character,artifacts,artifact_location,artifact_region,artifact_priority)
artifact_farming <- my_characters %>%
separate_rows(artifacts,sep =" & ") %>%
left_join(.,artifacts,on="artifact_set") %>%
group_by(artifact_location) %>%
mutate(artifact_priority=n()) %>%
ungroup() %>% select(character,artifact_set,artifact_location,artifact_region,artifact_priority) %>% distinct()
character_artifacts <- my_characters %>%
separate_rows(artifacts,sep =" & ")
artifact_farming <- merge(character_artifacts,artifacts,on="artifact_set") %>%
group_by(artifact_location) %>%
mutate(artifact_priority=n()) %>%
ungroup() %>% select(character,artifact_set,artifact_location,artifact_region,artifact_priority) %>% distinct()
artifact_farming <- merge(character_artifacts,artifacts,on="artifacts") %>%
group_by(artifact_location) %>%
mutate(artifact_priority=n()) %>%
ungroup() %>% select(character,artifact_set,artifact_location,artifact_region,artifact_priority) %>% distinct()
artifact_farming <- merge(character_artifacts,artifacts,on="artifacts") %>%
group_by(artifact_location) %>%
mutate(artifact_priority=n()) %>%
ungroup() %>% select(character,artifacts,artifact_location,artifact_region,artifact_priority) %>% distinct()
paged_table(artifact_farming)
