}
for (i in pbdb_ids) {
pbdbd_cal[i] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?taxon_no=",i,"&show=coords,paleoloc,class&limit=all"),
header = F,
na.strings = "")
}
for (i in pbdb_ids) {
pbdbd_cal[i] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?taxon_id=",i,"&show=coords,paleoloc,class&limit=all"),
header = F,
na.strings = "")
}
pbdb_cal <- data.frame()
for (i in pbdb_ids) {
pbdb_cal[i] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?taxon_id=",i,"&show=coords,paleoloc,class&limit=all"),
header = F,
na.strings = "")
}
View(pbdb_cal)
for (i in pbdb_ids) {
pbdb_cal[i] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?taxon_id=",i,"&show=coords,paleoloc,class&limit=all"),
header = T,
na.strings = "")
}
knitr::opts_chunk$set(echo = TRUE)
library(palaeoverse)
library(tidyverse)
library(sf) # This is for maps
library(rnaturalearth) # This pulls some data
library(rnaturalearthdata) # This pulls some data
library(rgeos) # for maps
library(terra)
library(rpaleoclim)
library(rgplates)
pbdb_ids <- c(183092,36014,485150,181068,179935,188779,18913,18463,18327,18320,74473,93141,20178,20214,20323,93326,13065,176048,176051,176046,176050,59167,70525,70526,167717,34654,22339,22353,208787,21896,34366,22232,21936,21938,18578,204534,113415,134808,197784,13503,187627,63338,63339,145810,71324,70705,212470,212466,212467,71348,68025,211630,216696,189519,211784,21862,165176,37493,49078,176051,176053,31748,75867,19966,75867,68021,60127,183381,87795,40984,197461,204957,191758,43619,43629,43631,39797,27313,21687,21686,21689,182835,136172,136430,136076,28298,136172,182157,182968,182908,70572,183094,51328,182916,70559,211822,211820,211820,211631,211634)
pbdb_cal <- data.frame()
for (i in pbdb_ids) {
pbdb_cal[i] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?occ_id=",i,"&show=coords,paleoloc,class&limit=all"),
header = T,
na.strings = "")
}
for (i in pbdb_ids) {
do.call(rbind,read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?occ_id=",i,"&show=coords,paleoloc,class&limit=all"),
header = T,
na.strings = ""))
}
for (i in pbdb_ids) {
do.call(rbind,read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?occ_id=",i,"&show=coords,paleoloc,class&limit=all"),
header = F,
na.strings = ""))
}
pbdb_cal <- for (i in pbdb_ids) {
do.call(rbind,read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?occ_id=",i,"&show=coords,paleoloc,class&limit=all"),
header = F,
na.strings = ""))
}
for (i in pbdb_ids) {
pbdb_cal[i] <- do.call(rbind, lapply(paste0("https://paleobiodb.org/data1.2/occs/list.csv?occ_id=",i,"&show=coords,paleoloc,class&limit=all"), function(x) read.csv(x, stringsAsFactors = FALSE, header = F, na.strings="")))
}
View(pbdb_cal)
pbdb_locs <- sapply(pbdb_cal, paste0, "https://paleobiodb.org/data1.2/occs/list.csv?occ_id=", sep="")
View(pbdb_locs)
pbdb_locs[[1]]
pbdb_cal <- lapply( function(i){
b = read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?occ_id=",i,"&show=coords,paleoloc,class&limit=all",header = F, na.strings=""))
}) %>% do.call(what = rbind)
pbdb_cal <- lapply(b = read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?occ_id=",i,"&show=coords,paleoloc,class&limit=all",header = F, na.strings=""))) %>% do.call(what = rbind)
pbdb_ids <- c(183092,36014,485150,181068,179935,188779,18913,18463,18327,18320,74473,93141,20178,20214,20323,93326,13065,176048,176051,176046,176050,59167,70525,70526,167717,34654,22339,22353,208787,21896,34366,22232,21936,21938,18578,204534,113415,134808,197784,13503,187627,63338,63339,145810,71324,70705,212470,212466,212467,71348,68025,211630,216696,189519,211784,21862,165176,37493,49078,176051,176053,31748,75867,19966,75867,68021,60127,183381,87795,40984,197461,204957,191758,43619,43629,43631,39797,27313,21687,21686,21689,182835,136172,136430,136076,28298,136172,182157,182968,182908,70572,183094,51328,182916,70559,211822,211820,211820,211631,211634)
pbdb_cal = read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?occ_id=",i,"&show=coords,paleoloc,class&limit=all",header = F, na.strings=""))) %>% do.call(what = rbind)
pbdb_cal = read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?occ_id=",i,"&show=coords,paleoloc,class&limit=all",header = F, na.strings=""))%>% do.call(what = rbind)
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?occ_id=",183092,"&show=coords,paleoloc,class&limit=all",header = F, na.strings="")
)
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?occ_id=","183092","&show=coords,paleoloc,class&limit=all",header = F, na.strings=""))
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?occ_id=",pbdbd_ids,"&show=coords,paleoloc,class",header = F, na.strings=""))
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?occ_id=",pbdb_ids,"&show=coords,paleoloc,class",header = F, na.strings=""))
pbdb_ids
pbdb_cal <- data.frame(nrow=length(pbdbd_ids))
pbdb_cal <- data.frame(nrow=length(pbdb_ids))
View(pbdb_cal)
pbdb_cal <- data.frame()
for (i in pbdb_cal) {
pbdb_cal[i] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all",header = F, na.strings=""))
}
for (i in pbdb_ids) {
pbdb_cal[i] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all",header = F, na.strings=""))
}
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",183092,"&show=coords,paleoloc,class,header = F, na.strings=""))
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",183092,"&show=coords,paleoloc,class",header = F, na.strings=""))
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",183092,"&show=coords,paleoloc,class",header = T, na.strings=""))
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",183092,"&show=coords,paleoloc,class&limit=all",header = T, na.strings=""))
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.txt?id=",183092,"&show=coords,paleoloc,class&limit=all",header = T, na.strings=""))
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.txt?id=",183092,"&show=coords,paleoloc,class&limit=all"))
for (i in pbdb_ids) {
pbdb_cal[i] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"))
}
pbdb_cal <-  do(rbind(pbdb_cal,temp[i]))
for (i in pbdb_ids) {
temp[i] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"))
pbdb_cal <-  do(rbind(pbdb_cal,temp[i]))
}
temp <- data.frame()
for (i in pbdb_ids) {
temp[i] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"))
pbdb_cal <-  do(rbind(pbdb_cal,temp[i]))
}
pbdb_cal <- purrr::map_df(pbdbÃ¤_ids, function(x) {
cal_temp <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",x,"&show=coords,paleoloc,class&limit=all"), skip=1, header = TRUE)
mydata %>%
count(Type) %>%
mutate(filename = basename(x))
})
pbdb_cal <- purrr::map_df(pbdb_ids, function(x) {
cal_temp <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",x,"&show=coords,paleoloc,class&limit=all"), skip=1, header = TRUE)
mydata %>%
count(Type) %>%
mutate(filename = basename(x))
})
pbdb_cal <- purrr::map_df(pbdb_ids, function(x) {
cal_temp <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",x,"&show=coords,paleoloc,class&limit=all"), skip=1, header = TRUE)
cal_temp %>%
count(Type) %>%
mutate(filename = basename(x))
})
pbdb_cal <- purrr::map_df(pbdb_ids, function(x) {
cal_temp <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",x,"&show=coords,paleoloc,class&limit=all"), skip=1, header = TRUE)
})
for(i in pbdb_ids) {
pbdb_cal[[i]] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",x,"&show=coords,paleoloc,class&limit=all"), skip=1, header = TRUE)
}
for(i in pbdb_ids) {
pbdb_cal[[i]] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), skip=1, header = TRUE)
}
for(i in pbdb_ids) {
pbdb_cal[[i]] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), sep="", header = T)
}
for(i in pbdb_ids) {
pbdb_cal[[i]] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"))
}
pbdb_cal[[i]] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"),header = TRUE, stringsAsFactors = FALSE)
for(i in pbdb_ids) {
pbdb_cal[[i]] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"),header = TRUE, stringsAsFactors = FALSE)
}
for(i in pbdb_ids) {
pbdb_cal[[i]] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"),header = TRUE, stringsAsFactors = FALSE)
}
for(i in pbdb_ids) {
pbdb_cal[[i]] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"),header = TRUE, stringsAsFactors = FALSE)
}
pbdb_cal <- data.frame()
for(i in pbdb_ids) {
pbdb_cal[[i]] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"),header = TRUE, stringsAsFactors = FALSE)
}
for(i in pbdb_ids) {
pbdb_cal[[i]] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
}
for(i in pbdb_ids) {
pbdb_cal[[i]] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
}
rm(pbdb_cal)
for(i in pbdb_ids) {
pbdb_cal[[i]] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
}
for(i in pbdb_ids) {
pbdb_cal[[i]] <- read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
}
pbdb_cal <-purrr::map(function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
})
pbdb_cal <-purrr::map(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
})
pdbd_ids[45]
pbdb_ids[45]
pbdb_ids <- c(183092,36014,485150,181068,179935,188779,18913,18463,18327,18320,74473,93141,20178,20214,20323,93326,13065,176048,176051,176046,176050,59167,70525,70526,167717,34654,22339,22353,208787,21896,34366,22232,21936,21938,18578,204534,113415,134808,197784,13503,187627,63338,63339,145810,71324,70705,212470,212466,212467,71348,68025,211630,216696,189519,211784,21862,165176,37493,49078,176051,176053,31748,75867,19966,75867,68021,60127,183381,87795,40984,197461,204957,191758,43619,43629,43631,39797,27313,21687,21686,21689,182835,136172,136430,136076,28298,136172,182157,182968,182908,70572,183094,51328,182916,70559,211822,211820,211820,211631,211634)
pbdb_cal <-purrr::map(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
})
pbdb_ids[45]
paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",71324,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",71324,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = ""))
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",71324,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = ""))
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",71324,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=","71324","&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=71324&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=43629&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=71324&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
pbdb_ids <- c(183092,36014,485150,181068,179935,188779,18913,18463,18327,18320,74473,93141,20178,20214,20323,93326,13065,176048,176051,176046,176050,59167,70525,70526,167717,34654,22339,22353,208787,21896,34366,22232,21936,21938,18578,204534,113415,134808,197784,13503,187627,63338,63339,145810)
pbdb_cal <-purrr::map(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
})
View(pbdb_cal)
pbdb_cal %>% unlist() %>% rbind()
pbdb_cal %>% rbind()
do.call(rbind,pbdb_cal)
pbdb_ids <- c(183092,36014,485150,181068,179935,188779,18913,18463,18327,18320,74473,93141,20178,20214,20323,93326,13065,176048,176051,176046,176050,59167,70525,70526,167717,34654,22339,22353,208787,21896,34366,22232,21936,21938,18578,204534,113415,134808,197784,13503,187627,63338,63339,145810,70705,212470,212466,212467,71348,68025,211630,216696,189519,211784,21862,165176,37493,49078,176051,176053,31748,75867,19966,75867,68021,60127,183381,87795,40984,197461,204957,191758,43619,43629,43631,39797,27313,21687,21686,21689,182835,136172,136430,136076,28298,136172,182157,182968,182908,70572,183094,51328,182916,70559,211822,211820,211820,211631,211634)
pbdb_cal <-purrr::map(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
})
library(palaeoverse)
library(tidyverse)
library(sf) # This is for maps
library(rnaturalearth) # This pulls some data
library(rnaturalearthdata) # This pulls some data
library(rgeos) # for maps
library(terra)
library(rpaleoclim)
library(rgplates)
knitr::opts_chunk$set(echo = TRUE)
pbdb_ids <- c(183092,36014,485150,181068,179935,188779,18913,18463,18327,18320,74473,93141,20178,20214,20323,93326,13065,176048,176051,176046,176050,59167,70525,70526,167717,34654,22339,22353,208787,21896,34366,22232,21936,21938,18578,204534,113415,134808,197784,13503,187627,63338,63339,145810,70705,212470,212466,212467,71348,68025,211630,216696,189519,211784,21862,165176,37493,49078,176051,176053,31748,75867,19966,75867,68021,60127,183381,87795,40984,197461,204957,191758,43619,43629,43631,39797,27313,21687,21686,21689,182835,136172,136430,136076,28298,136172,182157,182968,182908,70572,183094,51328,182916,70559,211822,211820,211820,211631,211634,71324)
pbdb_cal <-purrr::map(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
})
length(pbdb_ids)
pbdb_cal <-purrr::map(pbdb_ids[1:44],function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
}) %>%
rbind(purrr::map(pbdb_ids[45:100],function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
}))
pbdb_cal1 <-purrr::map(pbdb_ids[1:44],function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
})
pbdb_cal1 <-purrr::map(pbdb_ids[1:44],function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
})
pbdb_cal2 <- purrr::map(pbdb_ids[45:100],function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
})
View(pbdb_cal1)
pbdb_cal <-purrr::map_df(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
})
pbdb_cal <-purrr::map_df(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
}, dplyr::bind_rows)
pbdb_cal <-purrr::map_df(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "")
})
pbdb_cal <-purrr::map_df(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "",sep=",")
})
pbdb_cal <-purrr::map_df(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "",stringsAsFactors = F)
})
pbdb_ids <- c(183092,36014,485150,181068,179935,188779,18913,18463,18327,18320,74473,93141,20178,20214,20323,93326,13065,176048,176051,176046,176050,59167,70525,70526,167717,34654,22339,22353,208787,21896,34366,22232,21936,21938,18578,204534,113415,134808,197784,13503,187627,63338,63339,145810,212470,212466,212467,71348,68025,211630,216696,189519,211784,21862,165176,37493,49078,176051,176053,31748,75867,19966,75867,68021,60127,183381,87795,40984,197461,204957,191758,43619,43629,43631,39797,27313,21687,21686,21689,182835,136172,136430,136076,28298,136172,182157,182968,182908,70572,183094,51328,182916,70559,211822,211820,211820,211631,211634,71324,70705)
pbdb_cal <-purrr::map_df(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "",stringsAsFactors = F)
})
pbdb_ids[48]
pbdb_ids <- c(183092,36014,485150,181068,179935,188779,18913,18463,18327,18320,74473,93141,20178,20214,20323,93326,13065,176048,176051,176046,176050,59167,70525,70526,167717,34654,22339,22353,208787,21896,34366,22232,21936,21938,18578,204534,113415,134808,197784,13503,187627,63338,63339,145810,212470,212466,212467,68025,211630,216696,189519,211784,21862,165176,37493,49078,176051,176053,31748,75867,19966,75867,68021,60127,183381,87795,40984,197461,204957,191758,43619,43629,43631,39797,27313,21687,21686,21689,182835,136172,136430,136076,28298,136172,182157,182968,182908,70572,183094,51328,182916,70559,211822,211820,211820,211631,211634)
pbdb_cal <-purrr::map_df(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "",stringsAsFactors = F)
})
pbdbd_ids[50]
pbdb_ids[50]
pbdb_ids <- c(183092,36014,485150,181068,179935,188779,18913,18463,18327,18320,74473,93141,20178,20214,20323,93326,13065,176048,176051,176046,176050,59167,70525,70526,167717,34654,22339,22353,208787,21896,34366,22232,21936,21938,18578,204534,113415,134808,197784,13503,187627,63338,63339,145810,212470,212466,212467,68025,211630,189519,211784,21862,165176,37493,49078,176051,176053,31748,75867,19966,75867,68021,60127,183381,87795,40984,197461,204957,191758,43619,43629,43631,39797,27313,21687,21686,21689,182835,136172,136430,136076,28298,136172,182157,182968,182908,70572,183094,51328,182916,70559,211822,211820,211820,211631,211634)
pbdb_cal <-purrr::map_df(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "",stringsAsFactors = F)
})
pbdb_ids[87]
pbdb_cal <-purrr::map_df(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "",stringsAsFactors = F)
})
pbdb_ids[87]
pbdb_ids <- c(183092,36014,485150,181068,179935,188779,18913,18463,18327,18320,74473,93141,20178,20214,20323,93326,13065,176048,176051,176046,176050,59167,70525,70526,167717,34654,22339,22353,208787,21896,34366,22232,21936,21938,18578,204534,113415,134808,197784,13503,187627,63338,63339,145810,212470,212466,212467,68025,211630,189519,211784,21862,165176,37493,49078,176051,176053,31748,75867,19966,75867,68021,60127,183381,87795,40984,197461,204957,191758,43619,43629,43631,39797,27313,21687,21686,21689,182835,136172,136430,136076,28298,136172,182157,182968,182908,183094,51328,182916,70559,211822,211820,211820,211631,211634)
pbdb_cal <-purrr::map_df(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "",stringsAsFactors = F)
})
pbdb_ids <- c(183092,36014,485150,181068,179935,188779,18913,18463,18327,18320,74473,93141,20178,20214,20323,93326,13065,176048,176051,176046,176050,59167,70525,70526,167717,34654,22339,22353,208787,21896,34366,22232,21936,21938,18578,204534,113415,134808,197784,13503,187627,63338,63339,145810,212470,212466,212467,68025,211630,189519,211784,21862,165176,37493,49078,176051,176053,31748,75867,19966,75867,68021,60127,183381,87795,40984,197461,204957,191758,43619,43629,43631,39797,27313,21687,21686,21689,182835,136172,136430,136076,28298,136172,182157,182968,182908,183094,51328,182916,211822,211820,211820,211631,211634)
pbdb_ids_spec <- c(70559,71324,70705,71348,216696,70572) # break the main loop
pbdb_cal <-purrr::map_df(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "",stringsAsFactors = F)
})
pbdb_cal <-purrr::map(pbdb_ids,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "",stringsAsFactors = F)
})
View(pbdb_cal)
pbdb_cal <- do.call(rbind,pbdb_cal)
View(pbdb_cal)
pbdb_cal_spec <- purrr::map_df(pbdb_ids_spec,function(i) {read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=",i,"&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "",stringsAsFactors = F)
})
read.csv(paste0("https://paleobiodb.org/data1.2/occs/list.csv?id=70559&show=coords,paleoloc,class&limit=all"), header = T, na.strings = "",stringsAsFactors = F)
pbdb_cal %>% write.csv("C:/Users/alice/Documents/GitHub/Filovirus_EVE/pbdb_calculation.csv")
callook <- look_up(
occdf = pbdb_cal,
early_interval = "early_interval",
late_interval = "early_interval",
int_key = interval_key
)
View(pbdb_cal)
View(callook)
pbdbcal %>% mutate(early_interval=gsub("Early ",""),late_interval=gsub("Early ",""))
pbdb_cal %>% mutate(early_interval=gsub("Early ",""),late_interval=gsub("Early ",""))
pbdb_cal %>% mutate(early_interval=gsub("Early ","",early_interval),late_interval=gsub("Early ","",late_interval))
pbdb_cal <- pbdb_cal %>%
mutate(early_interval=gsub("Early ","",early_interval),
late_interval=gsub("Early ","",late_interval)) %>%
mutate(late_interval=gsub("Middle ","",late_interval))
pbdb_cal <- pbdb_cal %>%
mutate(early_interval=gsub("Early ","",early_interval),
late_interval=gsub("Early ","",late_interval))
View(pbdb_cal)
pbdb_cal <- pbdb_cal %>%
mutate(early_interval=gsub("Early ","",early_interval),
late_interval=gsub("Early ","",late_interval)) %>%
mutate(late_interval=gsub("Middle ","",late_interval))
callook <- look_up(
occdf = pbdb_cal,
early_interval = "early_interval",
late_interval = "early_interval",
int_key = interval_key
)
pbdb_cal <- pbdb_cal %>%
mutate_at(vars(early_interval,late_interval), ~ str_replace(., "Early ", "")) %>%
mutate_at(vars(early_interval,late_interval), ~ str_replace(., "Middle ", "")) %>%
mutate_at(vars(early_interval,late_interval), ~ str_replace(., "Late ", ""))
callook <- look_up(
occdf = pbdb_cal,
early_interval = "early_interval",
late_interval = "early_interval",
int_key = interval_key
)
callooked <- callook %>%
drop_na(interval_mid_ma)
cals <- palaeorotate(occdf = callook, age = "interval_mid_ma", method = "point", model = "GOLONKA")
View(callooked)
cals %>% write.csv("C:/Users/alice/Documents/GitHub/Filovirus_EVE/pbdb_calculation.csv")
world <- ne_countries(scale = "medium", returnclass = "sf")
ggplot(world)+
geom_sf()+
geom_point(data=cals, aes(x=lng,y=lat,shape=23,stroke=1.2,colour=as.numeric(min_ma)))+
scale_shape_identity()+
scale_colour_viridis_c(option="turbo")+
xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(angle=90,hjust=1))
library(palaeoverse)
library(tidyverse)
library(sf) # This is for maps
library(rnaturalearth) # This pulls some data
library(rnaturalearthdata) # This pulls some data
library(rgeos) # for maps
library(terra)# for maps
library(rpaleoclim)# for maps
library(rgplates)# for maps
library(purrrlyr) # for combining data sets
library(deeptime) # for plotting temporal ranges
library(janitor) # for combining data sets
library(viridis) # for colours
library(magick) # to export gifs
citation(palaeoverse)
citation("palaeoverse")
citation()
citation(sf)
citation("sf")
citation("rnaturalearth ")
citation("rnaturalearth")
citation("rnaturaleathdata ")
citation("rnaturaleathdata")
citation("rnaturalearthdata")
citation("rgeos ")
citation("rgeos")
citation("terra")
citation("rpaleoclim ")
citation("rpaleoclim")
citation("rgplates")
citation("purrrlyr")
citation("deeptime")
citation("viridis")
citation("magick")
library(installr)
updateR())
updateR()
library(tidyverse)
library(purrr)
setwd("C:/User/alice/Documents/GitHub/Genshin")
setwd("C:/Users/alice/Documents/GitHub/Genshin")
level_up_materials <- read.csv("character_materials.csv") %>%
separate_rows(character,sep=' & ')
local_specialties <- read.csv("local_specialties.csv") %>% separate_rows(character,sep=' & ')
all_characters <- read.csv("all_characters.csv")
characters <- purrr::reduce(list(all_characters,level_up_materials,local_specialties), dplyr::left_join, by = "character") %>% mutate(ascension = case_when(
element == "Traveler" ~ "Brilliant Diamond",
element == "Pyro" ~ "Agnidus Agate",
element == "Hydro" ~ "Varunada Lazurite",
element == "Dendro" ~ "Nagadus Emerald",
element == "Electro" ~ "Vajrada Amethyst",
element == "Anemo" ~ "Vayuda Turquoise",
element == "Cryo" ~ "Shivada Jade",
element == "Geo" ~ "Prithiva Topaz"))
my_characters <- read.csv("my_characters.csv", header = T,row.names=NULL)
# names(my_characters) <- c("pulls","character","style") run this, if you named the variables different in your table
farming <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0 & style != "TBD" & style != "Unused") # let's only farm for characters you have and want to be using
wishlist <- left_join(my_characters,all_characters,by="character") %>% filter(pulls==0)
my_characters %>% select(character,boss)
colnames(my_characters)
colnames(characters)
head(characters)
farming %>% group_by(source,material,source_type) %>% tally()
farming %>% group_by(source,material,source_type) %>% tally() %>% arrange(-n)
farming %>% group_by(source,material) %>% tally() %>% arrange(-n)
farming %>%
group_by(source,material) %>%
mutate(tally_score=n())
farming_bosses <- farming %>%
group_by(source,material) %>%
mutate(boss_score=n()) %>%
geoup_by(ascension) %>%
mutate(boss_score_2=n())
farming_bosses <- farming %>%
group_by(source,material) %>%
mutate(boss_score=n()) %>%
group_by(ascension) %>%
mutate(boss_score_2=n())
farming_bosses
View(farming_bosses)
colnames(farming)
characters %>% head()
loca_farming <- farming_bosses %>%
select(character,local_specialty,location) %>%
distinct() %>%
group_by(local_specialty) %>%
mutate(local_score=n())
farming_bosss %>% colnames()
farming_bosses %>% colnames()
level_up_materials <- read.csv("character_materials.csv") %>%
separate_rows(character,sep=' & ')
local_specialties <- read.csv("local_specialties.csv") %>% separate_rows(character,sep=' & ')
all_characters <- read.csv("all_characters.csv") %>% group_by(element) %>% mutate(element_score=n()) %>% ungroup()
characters <- purrr::reduce(list(all_characters,level_up_materials,local_specialties), dplyr::left_join, by = "character") %>% mutate(ascension = case_when(
element == "Traveler" ~ "Brilliant Diamond",
element == "Pyro" ~ "Agnidus Agate",
element == "Hydro" ~ "Varunada Lazurite",
element == "Dendro" ~ "Nagadus Emerald",
element == "Electro" ~ "Vajrada Amethyst",
element == "Anemo" ~ "Vayuda Turquoise",
element == "Cryo" ~ "Shivada Jade",
element == "Geo" ~ "Prithiva Topaz"))
my_characters <- read.csv("my_characters.csv", header = T,row.names=NULL)
# names(my_characters) <- c("pulls","character","style") run this, if you named the variables different in your table
farming <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0 & style != "TBD" & style != "Unused") # let's only farm for characters you have and want to be using
wishlist <- left_join(my_characters,all_characters,by="character") %>% filter(pulls==0)
farming_bosses <- farming %>%
group_by(source,material) %>%
mutate(boss_score=n())
local_farming <- farming_bosses %>%
select(character,local_specialty,location) %>%
distinct() %>%
group_by(local_specialty) %>%
mutate(local_score=n())
farming_bosses <- farming %>%
group_by(source,material) %>%
mutate(boss_score=n()) %>%
ungroup()
local_farming <- farming_bosses %>%
select(character,local_specialty,location) %>%
distinct() %>%
group_by(local_specialty) %>%
mutate(local_score=n())
local_farming <- farming_bosses %>%
select(character,local_specialty,location) %>%
distinct() %>%
group_by(local_specialty) %>%
mutate(local_score=n()) %>%
ungroup()
local_farming %>% head()
farming_sorted <- left_join(local_farming,farming_boss)
farming_sorted <- left_join(local_farming,farming_bosses)
farming_sorted <- left_join(local_farming,farming_bosses,by=c(character,local_speciality,location))
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_speciality","location"))
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location"))
farming_sorted
my_characters <- read.csv("my_characters.csv", header = T,row.names=NULL) %>%
mutate(faves_priority=case_when(style == "Unused" ~ 0,
style == "TBD" ~ 1,
style == "Exploration" ~ 2,
style == "Finisher" ~ 3,
style == "Healer" ~ 4,
style == "Support" ~ 5,
style == "Shielder" ~ 6,
style == "DPS" ~ 7))
# names(my_characters) <- c("pulls","character","style") run this, if you named the variables different in your table
farming <- merge(my_characters,characters,on="character") %>%
filter(pulls > 0 & style != "TBD" & style != "Unused") # let's only farm for characters you have and want to be using
wishlist <- left_join(my_characters,all_characters,by="character") %>% filter(pulls==0)
wishlist
wishlist <- left_join(my_characters,all_characters,by="character") %>% filter(pulls==0) %>% pull(character)
wishlist
farming_bosses <- farming %>%
group_by(source,material) %>%
mutate(boss_score=n()) %>%
ungroup()
local_farming <- farming_bosses %>%
select(character,local_specialty,location) %>%
distinct() %>%
group_by(local_specialty) %>%
mutate(local_score=n()) %>%
ungroup()
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=)
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority)
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority)
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority) %>%
select(character,local_specialy,location,source,material,farming_priority)
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority) %>%
select(character,local_specialty,location,source,material,farming_priority)
farming_sorted
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority) %>%
select(character,local_specialty,location,source,material,farming_priority) %>%
group_by(character) %>%
mutate(boss = paste(source,collapse = " & "),
boss_material = paste(material,collapse = " & "))
farming_sorted
farming_sorted <- left_join(local_farming,farming_bosses,by=c("character","local_specialty","location")) %>%
mutate(farming_priority=local_score+boss_score+faves_priority) %>%
select(character,local_specialty,location,source,material,farming_priority) %>%
group_by(character) %>%
mutate(boss = paste(source,collapse = " & "),
boss_material = paste(material,collapse = " & ")) %>%
select(-c(source,material))
farming_sorted
colnames(farming_sorted)
my_freeze_team
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(purrr)
libary(rmarkdown)
library(tidyverse)
library(purrr)
library(rmarkdown)
